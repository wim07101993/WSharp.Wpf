<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:WSharp.Wpf.Controls;assembly=WSharp.Wpf"
    xmlns:converters="clr-namespace:WSharp.Wpf.Converters;assembly=WSharp.Wpf"
    xmlns:helpers="clr-namespace:WSharp.Wpf.Helpers;assembly=WSharp.Wpf">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/WSharp.Wpf.Material;component/Styles/Icon.xaml" />
        <ResourceDictionary Source="pack://application:,,,/WSharp.Wpf;component/Icons.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:MathConverter x:Key="DivisionMathConverter" Operation="Divide" />

    <Style x:Key="ActionToggleButton" TargetType="{x:Type ToggleButton}">
        <Style.Resources>
            <ResourceDictionary>
                <Style BasedOn="{StaticResource Icon}" TargetType="{x:Type controls:Icon}">
                    <Setter Property="Width" Value="20" />
                    <Setter Property="Height" Value="20" />
                </Style>
            </ResourceDictionary>
        </Style.Resources>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="helpers:ShadowHelper.ShadowDepth" Value="Depth0" />
        <Setter Property="helpers:ToggleButtonHelper.OnContent">
            <Setter.Value>
                <controls:Icon Resource="{StaticResource Check}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ShadowHelper.ShadowDepth), Converter={x:Static converters:ShadowConverter.Instance}}">
                        <Grid
                            x:Name="OffGrid"
                            Background="{TemplateBinding Background}"
                            RenderTransformOrigin=".5,.5">
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                FlowDirection="LeftToRight" />
                            <Grid.Clip>
                                <EllipseGeometry RadiusX="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width, Converter={StaticResource DivisionMathConverter}, ConverterParameter=2.0}" RadiusY="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height, Converter={StaticResource DivisionMathConverter}, ConverterParameter=2.0}">
                                    <EllipseGeometry.Center>
                                        <MultiBinding Converter="{x:Static converters:PointValueConverter.Instance}">
                                            <Binding
                                                Converter="{StaticResource DivisionMathConverter}"
                                                ConverterParameter="2.0"
                                                Path="Width"
                                                RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding
                                                Converter="{StaticResource DivisionMathConverter}"
                                                ConverterParameter="2.0"
                                                Path="Height"
                                                RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </EllipseGeometry.Center>
                                </EllipseGeometry>
                            </Grid.Clip>
                            <Grid.RenderTransform>
                                <ScaleTransform x:Name="OffScaleTransform" ScaleX="1" ScaleY="1" />
                            </Grid.RenderTransform>
                        </Grid>
                        <Grid
                            x:Name="OnGrid"
                            Background="{TemplateBinding Background}"
                            RenderTransformOrigin=".5,.5">
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ToggleButtonHelper.OnContent)}"
                                ContentTemplate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ToggleButtonHelper.OnContentTemplate)}"
                                FlowDirection="LeftToRight" />
                            <Grid.Clip>
                                <EllipseGeometry RadiusX="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width, Converter={StaticResource DivisionMathConverter}, ConverterParameter=2.0}" RadiusY="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height, Converter={StaticResource DivisionMathConverter}, ConverterParameter=2.0}">
                                    <EllipseGeometry.Center>
                                        <MultiBinding Converter="{x:Static converters:PointValueConverter.Instance}">
                                            <Binding
                                                Converter="{StaticResource DivisionMathConverter}"
                                                ConverterParameter="2.0"
                                                Path="Width"
                                                RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding
                                                Converter="{StaticResource DivisionMathConverter}"
                                                ConverterParameter="2.0"
                                                Path="Height"
                                                RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </EllipseGeometry.Center>
                                </EllipseGeometry>
                            </Grid.Clip>
                            <Grid.RenderTransform>
                                <ScaleTransform x:Name="OnScaleTransform" ScaleX="0" ScaleY="1" />
                            </Grid.RenderTransform>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="0.23"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="*" To="Checked">
                                        <Storyboard FillBehavior="HoldEnd">
                                            <DoubleAnimationUsingKeyFrames
                                                Storyboard.TargetName="OffScaleTransform"
                                                Storyboard.TargetProperty="ScaleX"
                                                Duration="0:0:0.2">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.0" Value="1" />
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames
                                                Storyboard.TargetName="OnScaleTransform"
                                                Storyboard.TargetProperty="ScaleX"
                                                Duration="0:0:0.2">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="Checked" To="Unchecked">
                                        <Storyboard FillBehavior="HoldEnd">
                                            <DoubleAnimationUsingKeyFrames
                                                Storyboard.TargetName="OnScaleTransform"
                                                Storyboard.TargetProperty="ScaleX"
                                                Duration="0:0:0.2">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.0" Value="1" />
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames
                                                Storyboard.TargetName="OffScaleTransform"
                                                Storyboard.TargetProperty="ScaleX"
                                                Duration="0:0:0.2">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="OffScaleTransform"
                                            Storyboard.TargetProperty="ScaleX"
                                            To="0"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="OnScaleTransform"
                                            Storyboard.TargetProperty="ScaleX"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="OffScaleTransform"
                                            Storyboard.TargetProperty="ScaleX"
                                            To="1"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="OnScaleTransform"
                                            Storyboard.TargetProperty="ScaleX"
                                            To="0"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="IndeterminateCheck"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ActionLightToggleButton"
        BasedOn="{StaticResource ActionToggleButton}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush}" />
    </Style>

    <Style
        x:Key="ActionDarkToggleButton"
        BasedOn="{StaticResource ActionToggleButton}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}" />
    </Style>

    <Style
        x:Key="ActionAccentToggleButton"
        BasedOn="{StaticResource ActionToggleButton}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource SecondaryAccentBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryAccentBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryAccentForegroundBrush}" />
    </Style>

</ResourceDictionary>