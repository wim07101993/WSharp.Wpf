<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:WSharp.Wpf.Controls;assembly=WSharp.Wpf"
    xmlns:converters="clr-namespace:WSharp.Wpf.Converters;assembly=WSharp.Wpf"
    xmlns:helpers="clr-namespace:WSharp.Wpf.Helpers;assembly=WSharp.Wpf">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/WSharp.Wpf;component/Icons.xaml" />
        <ResourceDictionary Source="pack://application:,,,/WSharp.Wpf.Material;component/ValidationErrorTemplate.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="TextBoxBase" TargetType="{x:Type TextBoxBase}">
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorder}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="helpers:TextFieldHelper.TextBoxViewMargin" Value="1 0 1 0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="CaretBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationErrorTemplate}" />
        <Setter Property="helpers:TextFieldHelper.UnderlineBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="helpers:LabelHelper.Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
        <!--  cludge the default context menu  -->
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Command="Cut">
                        <MenuItem.Icon>
                            <controls:Icon Resource="{DynamicResource ContentCut}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Command="Copy">
                        <MenuItem.Icon>
                            <controls:Icon Resource="{DynamicResource ContentCopy}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Command="Paste">
                        <MenuItem.Icon>
                            <controls:Icon Resource="{DynamicResource ContentPaste}" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <Border
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{DynamicResource TextFieldBoxHoverBackground}"
                            CornerRadius="{Binding Path=(helpers:TextFieldHelper.TextFieldCornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                            RenderTransformOrigin="0.5,0.5"
                            Visibility="{Binding Path=(helpers:TextFieldHelper.RippleOnFocusEnabled), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:BooleanToVisibilityConverter.Instance}}">
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="ScaleTransform" ScaleX="0" ScaleY="0" />
                            </Border.RenderTransform>
                        </Border>
                        <Border
                            x:Name="textFieldBoxBorder"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{Binding Path=(helpers:TextFieldHelper.TextFieldCornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                            SnapsToDevicePixels="True">
                            <Grid>
                                <Border
                                    x:Name="border"
                                    Padding="0,4,0,4"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                    <Grid
                                        x:Name="textFieldGrid"
                                        MinWidth="1"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <ScrollViewer
                                            x:Name="PART_ContentHost"
                                            Focusable="false"
                                            HorizontalScrollBarVisibility="Hidden"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                            VerticalScrollBarVisibility="Hidden" />
                                        <controls:SmartLabel
                                            x:Name="Label"
                                            Grid.Column="0"
                                            Padding="{TemplateBinding Padding}"
                                            FloatingOffset="{Binding Path=(helpers:LabelHelper.FloatingOffset), RelativeSource={RelativeSource TemplatedParent}}"
                                            FloatingScale="{Binding Path=(helpers:LabelHelper.FloatingScale), RelativeSource={RelativeSource TemplatedParent}}"
                                            FontSize="{TemplateBinding FontSize}"
                                            Label="{Binding Path=(helpers:LabelHelper.Label), RelativeSource={RelativeSource TemplatedParent}}"
                                            LabelOpacity="{Binding Path=(helpers:LabelHelper.LabelOpacity), RelativeSource={RelativeSource TemplatedParent}}"
                                            LabelProxy="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:LabelProxyConverter.Instance}}"
                                            UseFloating="{Binding Path=(helpers:LabelHelper.IsFloating), RelativeSource={RelativeSource TemplatedParent}}" />
                                        <StackPanel Grid.Column="1" Orientation="Horizontal">
                                            <TextBlock
                                                VerticalAlignment="Bottom"
                                                FontSize="{TemplateBinding FontSize}"
                                                Opacity="{Binding Path=(helpers:LabelHelper.LabelOpacity), RelativeSource={RelativeSource TemplatedParent}}"
                                                Text="{Binding Path=(helpers:TextFieldHelper.SuffixText), RelativeSource={RelativeSource TemplatedParent}}" />
                                            <Button
                                                x:Name="PART_ClearButton"
                                                Height="Auto"
                                                Padding="2,0,0,0"
                                                Style="{DynamicResource ToolButton}">
                                                <Button.Visibility>
                                                    <MultiBinding Converter="{x:Static converters:MultiBooleanAndToVisibilityConverter.Instance}">
                                                        <Binding
                                                            Converter="{x:Static converters:InvertedBooleanConverter.Instance}"
                                                            ElementName="Label"
                                                            Path="IsContentNullOrEmpty" />
                                                        <Binding Path="(helpers:TextFieldHelper.HasClearButton)" RelativeSource="{RelativeSource TemplatedParent}" />
                                                    </MultiBinding>
                                                </Button.Visibility>
                                                <controls:Icon Margin="0" Resource="{DynamicResource CloseCircle}" />
                                            </Button>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                                <Border
                                    x:Name="textFieldBoxBottomLine"
                                    Height="0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Bottom"
                                    Background="{TemplateBinding BorderBrush}"
                                    CornerRadius="{Binding Path=(helpers:TextFieldHelper.UnderlineCornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                    SnapsToDevicePixels="True" />
                                <Line
                                    x:Name="DashedLine"
                                    VerticalAlignment="Bottom"
                                    Opacity="0.56"
                                    Stroke="{TemplateBinding BorderBrush}"
                                    StrokeDashArray="1,2.5"
                                    StrokeDashCap="Round"
                                    StrokeThickness="1.25"
                                    Visibility="Collapsed"
                                    X1="0"
                                    X2="{Binding ActualWidth, ElementName=border}"
                                    Y1="0"
                                    Y2="0" />
                                <controls:Underline
                                    x:Name="Underline"
                                    Background="{Binding Path=(helpers:TextFieldHelper.UnderlineBrush), RelativeSource={RelativeSource TemplatedParent}}"
                                    CornerRadius="{Binding Path=(helpers:TextFieldHelper.UnderlineCornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                    Visibility="{Binding Path=(helpers:TextFieldHelper.DecorationVisibility), RelativeSource={RelativeSource TemplatedParent}}" />
                                <Canvas VerticalAlignment="Bottom">
                                    <TextBlock
                                        Canvas.Top="2"
                                        MaxWidth="{Binding ActualWidth, ElementName=border}"
                                        FontSize="10"
                                        Opacity="{Binding Path=(helpers:LabelHelper.LabelOpacity), RelativeSource={RelativeSource TemplatedParent}}"
                                        Text="{Binding Path=(helpers:LabelHelper.HelperText), RelativeSource={RelativeSource TemplatedParent}}" />
                                </Canvas>
                            </Grid>
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ScaleTransform"
                                            Storyboard.TargetProperty="ScaleX"
                                            From="0"
                                            To="1"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ScaleTransform"
                                            Storyboard.TargetProperty="ScaleY"
                                            From="0"
                                            To="1"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            BeginTime="0:0:0.45"
                                            Storyboard.TargetName="ScaleTransform"
                                            Storyboard.TargetProperty="ScaleX"
                                            To="0"
                                            Duration="0" />
                                        <DoubleAnimation
                                            BeginTime="0:0:0.45"
                                            Storyboard.TargetName="ScaleTransform"
                                            Storyboard.TargetProperty="ScaleY"
                                            To="0"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ScaleTransform"
                                            Storyboard.TargetProperty="ScaleX"
                                            To="0"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="ScaleTransform"
                                            Storyboard.TargetProperty="ScaleY"
                                            To="0"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="helpers:LabelHelper.IsFloating" Value="True" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Label" Property="Foreground" Value="{Binding Path=(helpers:LabelHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="Label" Property="LabelOpacity" Value="1" />
                        </MultiTrigger>
                        <Trigger Property="helpers:LabelHelper.IsFloating" Value="True">
                            <Setter TargetName="border" Property="Margin" Value="0,12,0,0" />
                        </Trigger>
                        <Trigger Property="helpers:TextFieldHelper.HasFilledTextField" Value="True">
                            <Setter TargetName="textFieldBoxBorder" Property="Background" Value="{DynamicResource TextFieldBoxHoverBackground}" />
                            <Setter Property="VerticalContentAlignment" Value="Top" />
                            <Setter TargetName="textFieldBoxBorder" Property="Background" Value="{DynamicResource TextFieldBoxBackground}" />
                            <Setter TargetName="textFieldBoxBorder" Property="Padding" Value="0,8,0,0" />
                            <Setter TargetName="textFieldGrid" Property="Margin" Value="16,0,16,0" />
                            <Setter TargetName="border" Property="BorderThickness" Value="0" />
                            <Setter TargetName="border" Property="Cursor" Value="IBeam" />
                            <Setter TargetName="Label" Property="Margin" Value="0,0,0,16" />
                            <Setter TargetName="PART_ContentHost" Property="Margin" Value="0,8,0,8" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="helpers:TextFieldHelper.HasOutlinedTextField" Value="False" />
                                <Condition Property="helpers:TextFieldHelper.HasFilledTextField" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ContentHost" Property="Height" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="AcceptsReturn" Value="true" />
                                <Condition Property="helpers:TextFieldHelper.HasOutlinedTextField" Value="False" />
                                <Condition Property="helpers:TextFieldHelper.HasFilledTextField" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="VerticalContentAlignment" Value="Top" />
                        </MultiTrigger>
                        <Trigger Property="helpers:TextFieldHelper.HasOutlinedTextField" Value="True">
                            <Setter Property="VerticalContentAlignment" Value="Top" />
                            <Setter TargetName="textFieldBoxBorder" Property="BorderThickness" Value="1" />
                            <Setter TargetName="textFieldBoxBorder" Property="BorderBrush" Value="{DynamicResource TextAreaBorder}" />
                            <Setter TargetName="textFieldBoxBorder" Property="Padding" Value="0,8,0,0" />
                            <Setter TargetName="textFieldBoxBorder" Property="Margin" Value="-1" />
                            <Setter TargetName="textFieldGrid" Property="Margin" Value="16,0,16,0" />
                            <Setter TargetName="border" Property="BorderThickness" Value="0" />
                            <Setter TargetName="border" Property="Cursor" Value="IBeam" />
                            <Setter TargetName="Underline" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Label" Property="Margin" Value="0,0,0,16" />
                            <Setter TargetName="PART_ContentHost" Property="Margin" Value="0,8,0,8" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="helpers:TextFieldHelper.HasOutlinedTextField" Value="True" />
                                <Condition Property="helpers:LabelHelper.IsFloating" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ContentHost" Property="Margin" Value="0,0,0,8" />
                            <Setter TargetName="Label" Property="Margin" Value="0,0,0,0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="helpers:TextFieldHelper.HasOutlinedTextField" Value="False" />
                                <Condition Property="helpers:TextFieldHelper.HasFilledTextField" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ContentHost" Property="Height" Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="AcceptsReturn" Value="true" />
                                <Condition Property="helpers:TextFieldHelper.HasOutlinedTextField" Value="False" />
                                <Condition Property="helpers:TextFieldHelper.HasFilledTextField" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="VerticalContentAlignment" Value="Top" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.42" />
                            <Setter TargetName="textFieldBoxBottomLine" Property="Height" Value="0" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false" />
                                <Condition Property="helpers:TextFieldHelper.HasOutlinedTextField" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="textFieldBoxBorder" Property="BorderBrush" Value="{DynamicResource TextAreaInactiveBorder}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false" />
                                <Condition Property="helpers:TextFieldHelper.HasOutlinedTextField" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Opacity" Value="0.42" />
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false" />
                                <Condition Property="helpers:TextFieldHelper.HasOutlinedTextField" Value="False" />
                                <Condition Property="helpers:TextFieldHelper.HasFilledTextField" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DashedLine" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Underline" Property="IsActive" Value="True" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="helpers:TextFieldHelper.HasOutlinedTextField" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="textFieldBoxBorder" Property="Margin" Value="-2" />
                            <Setter TargetName="textFieldBoxBorder" Property="BorderThickness" Value="2" />
                            <Setter TargetName="textFieldBoxBorder" Property="BorderBrush" Value="{Binding Path=(helpers:TextFieldHelper.UnderlineBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="helpers:TextFieldHelper.HasFilledTextField" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="textFieldBoxBottomLine" Property="Height" Value="2" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="helpers:TextFieldHelper.HasFilledTextField" Value="False" />
                                <Condition Property="helpers:TextFieldHelper.HasOutlinedTextField" Value="False" />
                                <Condition Property="helpers:TextFieldHelper.NewSpecHighlightingEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{Binding Path=(helpers:TextFieldHelper.UnderlineBrush), RelativeSource={RelativeSource Self}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="helpers:TextFieldHelper.HasFilledTextField" Value="False" />
                                <Condition Property="helpers:TextFieldHelper.HasOutlinedTextField" Value="False" />
                                <Condition Property="helpers:TextFieldHelper.NewSpecHighlightingEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="BorderThickness" Value="0,0,0,2" />
                            <Setter TargetName="border" Property="Padding" Value="0,4,0,3" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="helpers:TextFieldHelper.HasFilledTextField" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="textFieldBoxBorder" Property="Background" Value="{DynamicResource TextFieldBoxHoverBackground}" />
                            <Setter TargetName="textFieldBoxBottomLine" Property="Height" Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="helpers:TextFieldHelper.HasOutlinedTextField" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="textFieldBoxBorder" Property="Margin" Value="-2" />
                            <Setter TargetName="textFieldBoxBorder" Property="BorderThickness" Value="2" />
                        </MultiTrigger>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource ValidationErrorBrush}" />
                            <Setter TargetName="Underline" Property="Background" Value="{DynamicResource ValidationErrorBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Validation.HasError" Value="True" />
                                <Condition Property="helpers:TextFieldHelper.HasOutlinedTextField" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="textFieldBoxBorder" Property="Margin" Value="-2" />
                            <Setter TargetName="textFieldBoxBorder" Property="BorderThickness" Value="2" />
                            <Setter TargetName="textFieldBoxBorder" Property="BorderBrush" Value="{DynamicResource ValidationErrorBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="TextBox"
        BasedOn="{StaticResource TextBoxBase}"
        TargetType="{x:Type TextBox}" />

    <Style
        x:Key="FloatingLabelTextBox"
        BasedOn="{StaticResource TextBox}"
        TargetType="{x:Type TextBox}">
        <Setter Property="helpers:LabelHelper.IsFloating" Value="True" />
    </Style>

    <Style
        x:Key="FilledTextFieldTextBox"
        BasedOn="{StaticResource FloatingLabelTextBox}"
        TargetType="{x:Type TextBox}">
        <Setter Property="helpers:TextFieldHelper.HasFilledTextField" Value="True" />
        <Setter Property="helpers:TextFieldHelper.RippleOnFocusEnabled" Value="True" />
        <Setter Property="helpers:TextFieldHelper.TextFieldCornerRadius" Value="4,4,0,0" />
        <Setter Property="helpers:TextFieldHelper.UnderlineCornerRadius" Value="0" />
    </Style>

    <Style
        x:Key="OutlinedTextFieldTextBox"
        BasedOn="{StaticResource FloatingLabelTextBox}"
        TargetType="{x:Type TextBox}">
        <Setter Property="helpers:TextFieldHelper.HasOutlinedTextField" Value="True" />
        <Setter Property="helpers:TextFieldHelper.TextFieldCornerRadius" Value="4" />
    </Style>

</ResourceDictionary>